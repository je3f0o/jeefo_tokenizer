/**
 * jeefo_tokenizer : v0.0.26
 * Author          : je3f0o, <je3f0o@gmail.com>
 * Homepage        : https://github.com/je3f0o/jeefo_tokenizer
 * License         : The MIT License
 * Copyright       : 2017
 **/
"use strict";module.exports=function(r){return r.use(function(r){var t,s,e=r.module("jeefo_tokenizer",["jeefo_core"]).run(["object.assign","JeefoObject"],function(r,e){t=r,s=e}),n=function(r,t){this.string=r,this.cursor={line:1,column:0,virtual_column:0,index:-1},this.tab_space=t||4};n.prototype={assign:t,peek:function(r){return this.string.charAt(r)},seek:function(r,t){return this.string.substring(r,t||this.cursor.index)},next:function(r){var t=this.string.charAt(++this.cursor.index);if(r){for(;t&&t<=" ";)this.update_cursor(t),t=this.string.charAt(++this.cursor.index);this.update_cursor(t)}else this.update_cursor(t);return t||null},current:function(){return this.string.charAt(this.cursor.index)},update_cursor:function(r){"\r"===r||"\n"===r?(this.cursor.line+=1,this.cursor.column=0,this.cursor.virtual_column=0):(this.cursor.column+=1,this.cursor.virtual_column+="\t"===r?this.tab_space:1)},move_right:function(r){this.cursor.index+=r,this.cursor.column+=r,this.cursor.virtual_column+=r},get_cursor:function(){return this.assign({},this.cursor)},end_cursor:function(){return{line:this.cursor.line,index:this.cursor.index+1,column:this.cursor.column+1,virtual_column:this.cursor.virtual_column+1}}};var i=function(r){this.Token=function(){},this.assign(this.Token.prototype,this.default_protos,r.protos),r.is&&(this.is=r.is)};i.prototype={assign:t,default_protos:{type:"UndefinedToken",precedence:0}};var o=function(r){this.parsers=r||[]};o.prototype={Parser:i,Tokenizer:o,StringStream:n,sort_handler:function(r,t){return r.Token.prototype.precedence-t.Token.prototype.precedence},copy:function(){for(var r=0,t=[];r<this.parsers.length;++r)t[r]=this.parsers[r];return new this.Tokenizer(t)},init:function(r,t){this.streamer=new this.StringStream(r,t)},next:function(){var r=this.streamer.next(!0);if(!r)return null;for(var t=this.parsers.length-1;t>=0;--t)if(!this.parsers[t].is||this.parsers[t].is(r,this.streamer)){var s=new this.parsers[t].Token;return s.initialize(r,this.streamer),s}},register:function(r){return r=new this.Parser(r),this.parsers.push(r),this.parsers.sort(this.sort_handler),this}},e.namespace("tokenizer.StringStream",function(){return n}).namespace("tokenizer.Tokenizer",function(){return o})}),r};